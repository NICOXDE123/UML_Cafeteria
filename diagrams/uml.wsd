@startuml
' ====== Delicia Caf√© - UML con Admin ======
skinparam classAttributeIconSize 0
left to right direction

class Usuario {
  -id: int
  +nombre: string
  +email: string
  +passwordHash: string
  +rol: string  ' "cliente" | "staff"
  +registrar(): void
  +iniciarSesion(email, password): bool
}

class Admin {
  -id: int
  +nombre: string
  +email: string
  +passwordHash: string
  +crearProducto(p: Producto): void
  +editarProducto(idProd: int, datos: Producto): void
  +eliminarProducto(idProd: int): void
  +publicarProducto(idProd: int): void
  +gestionarUsuarios(): void
  +verReservas(): List<Reserva>
  +actualizarReserva(idRes: int, estado: EstadoReserva): void
}

class Producto {
  -id: int
  +nombre: string
  +precio: decimal
  +fechaAlta: date
  +stock: int
  +activo: bool
  +tipo: string  ' "Caf√©" | "Pasteler√≠a"
  +ajustarStock(delta: int): void
}

class Categoria {
  -id: int
  +nombre: string
  +descripcion: string
}

class Reserva {
  -id: int
  +nombreCliente: string
  +correo: string
  +fecha: date
  +hora: time
  +personas: int
  +comentarios: string
  +estado: EstadoReserva
  +confirmar(): void
  +cancelar(): void
}

' üëâ Se mueve EstadoReserva cerca de Producto
class EstadoReserva {
  Pendiente
  Confirmada
  Cancelada
}

' Relaciones
Usuario "1" --> "0..*" Reserva : crea
Admin "1" --> "0..*" Reserva : administra
Admin "1" --> "0..*" Producto : gestiona
Producto "0..*" --> "1" Categoria : clasifica
Reserva --> EstadoReserva
Producto --> EstadoReserva : usa
@enduml

